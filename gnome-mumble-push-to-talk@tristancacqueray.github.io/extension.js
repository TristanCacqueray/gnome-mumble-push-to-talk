// Generated by purs bundle 0.14.0
var PS = {};
(function(exports) {
  "use strict";                                                                
  exports.unsafe_onKeyPressEvent = actor => cb => () =>
    actor.connect("key-press-event", (actor, event) => cb(actor)(event)())
  exports.unsafe_onKeyReleaseEvent = actor => cb => () =>
    actor.connect("key-release-event", (actor, event) => cb(actor)(event)())
})(PS["Clutter.Actor"] = PS["Clutter.Actor"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Clutter.Actor"] = $PS["Clutter.Actor"] || {};
  var exports = $PS["Clutter.Actor"];
  var $foreign = $PS["Clutter.Actor"];
  var onKeyReleaseEvent = function (dictActor) {
      return $foreign.unsafe_onKeyReleaseEvent;
  };
  var onKeyPressEvent = function (dictActor) {
      return $foreign.unsafe_onKeyPressEvent;
  };
  exports["onKeyPressEvent"] = onKeyPressEvent;
  exports["onKeyReleaseEvent"] = onKeyReleaseEvent;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafe_get_key_code = event => () => event.get_key_code()
  exports.unsafe_has_shift_modifier = event => () => event.has_shift_modifier()
})(PS["Clutter.Event"] = PS["Clutter.Event"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Clutter.Event"] = $PS["Clutter.Event"] || {};
  var exports = $PS["Clutter.Event"];
  var $foreign = $PS["Clutter.Event"];
  var has_shift_modifier = function (dictEvent) {
      return $foreign.unsafe_has_shift_modifier;
  };
  var get_key_code = function (dictEvent) {
      return $foreign.unsafe_get_key_code;
  };
  exports["get_key_code"] = get_key_code;
  exports["has_shift_modifier"] = has_shift_modifier;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                  
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["when"] = when;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];                 
  var Functor = function (map) {
      this.map = map;
  };
  exports["Functor"] = Functor;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";

  exports["null"] = null;

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  exports["toNullable"] = toNullable;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["applicativeEffect"] = applicativeEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function(exports) {
  "use strict";      
  exports.log = msg => () => log(msg)
})(PS["GJS"] = PS["GJS"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["GJS"] = $PS["GJS"] || {};
  var exports = $PS["GJS"];
  var $foreign = $PS["GJS"];
  exports["log"] = $foreign.log;
})(PS);
(function(exports) {
  "use strict";

  const GObject = imports.gi.GObject;                                          

  exports.unsafe_disconnect = obj => handlerId => () => obj.disconnect(handlerId)
})(PS["GObject"] = PS["GObject"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["GObject"] = $PS["GObject"] || {};
  var exports = $PS["GObject"];
  var $foreign = $PS["GObject"];
  var disconnect = function (dictGObject) {
      return $foreign.unsafe_disconnect;
  };
  exports["disconnect"] = disconnect;
})(PS);
(function(exports) {
  "use strict";

  const DBusCallFlags = imports.gi.Gio.DBusCallFlags;

  exports.none = DBusCallFlags.NONE
})(PS["Gio.DBusCallFlags"] = PS["Gio.DBusCallFlags"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Gio.DBusCallFlags"] = $PS["Gio.DBusCallFlags"] || {};
  var exports = $PS["Gio.DBusCallFlags"];
  var $foreign = $PS["Gio.DBusCallFlags"];
  exports["none"] = $foreign.none;
})(PS);
(function(exports) {
  "use strict";

  const DBus = imports.gi.Gio.DBus;
  const DBusConnection = imports.gi.Gio.DBusConnection;

  exports.session = DBus.session

  exports.call_impl = conn => bus_name => object_path => interface_name =>
    method_name => parameters => reply_type => flags => timeout_msec => cancellable => cbM => () => {
      const cb = cbM ? (_obj, res) => cbM(res)() : null;
      conn.call(bus_name, object_path, interface_name,
                method_name, parameters, reply_type, flags, timeout_msec, cancellable, cb);
    }
})(PS["Gio.DBusConnection"] = PS["Gio.DBusConnection"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Gio.DBusConnection"] = $PS["Gio.DBusConnection"] || {};
  var exports = $PS["Gio.DBusConnection"];
  var $foreign = $PS["Gio.DBusConnection"];
  var Data_Nullable = $PS["Data.Nullable"];
  var call = function (conn) {
      return function (bus_name) {
          return function (object_path) {
              return function (interface_name) {
                  return function (method_name) {
                      return function (parameters) {
                          return function (reply_type) {
                              return function (flags) {
                                  return function (timeout_msec) {
                                      return function (cancellable) {
                                          return function (cb) {
                                              return $foreign.call_impl(conn)(Data_Nullable.toNullable(bus_name))(object_path)(interface_name)(method_name)(Data_Nullable.toNullable(parameters))(Data_Nullable.toNullable(reply_type))(flags)(timeout_msec)(Data_Nullable.toNullable(cancellable))(Data_Nullable.toNullable(cb));
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["call"] = call;
  exports["session"] = $foreign.session;
})(PS);
(function(exports) {
  "use strict";

  exports.stage = global.stage
})(PS["ShellUI.Global"] = PS["ShellUI.Global"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["ShellUI.Global"] = $PS["ShellUI.Global"] || {};
  var exports = $PS["ShellUI.Global"];
  var $foreign = $PS["ShellUI.Global"];
  exports["stage"] = $foreign.stage;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["GnomeMumblePushToTalk"] = $PS["GnomeMumblePushToTalk"] || {};
  var exports = $PS["GnomeMumblePushToTalk"];
  var Clutter_Actor = $PS["Clutter.Actor"];
  var Clutter_Event = $PS["Clutter.Event"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var GJS = $PS["GJS"];
  var GObject = $PS["GObject"];
  var Gio_DBusCallFlags = $PS["Gio.DBusCallFlags"];
  var Gio_DBusConnection = $PS["Gio.DBusConnection"];
  var ShellUI_Global = $PS["ShellUI.Global"];                
  var main = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  var log = function (msg) {
      return GJS.log("gnome-mumble-push-to-talk: " + msg);
  };
  var init = function (env) {
      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  };
  var enable = function (env) {
      var dbusCall = function (method) {
          return function __do() {
              log("Calling dbus: " + method)();
              return Gio_DBusConnection.call(Gio_DBusConnection.session)(new Data_Maybe.Just("net.sourceforge.mumble.mumble"))("/")("net.sourceforge.mumble.mumble")(method)(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(Gio_DBusCallFlags.none)(200)(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)();
          };
      };
      var onKeyPress = function (_actor) {
          return function (ev) {
              return function __do() {
                  var code = Clutter_Event.get_key_code()(ev)();
                  var shift = Clutter_Event.has_shift_modifier()(ev)();
                  Control_Applicative.when(Effect.applicativeEffect)(code === 133 && shift)(dbusCall("startTalking"))();
                  return false;
              };
          };
      };
      var onKeyRelease = function (_actor) {
          return function (ev) {
              return function __do() {
                  var code = Clutter_Event.get_key_code()(ev)();
                  Control_Applicative.when(Effect.applicativeEffect)(code === 133)(dbusCall("stopTalking"))();
                  return false;
              };
          };
      };
      return function __do() {
          log("enable called")();
          var pressHandler = Clutter_Actor.onKeyPressEvent()(ShellUI_Global.stage)(onKeyPress)();
          var releaseHandler = Clutter_Actor.onKeyReleaseEvent()(ShellUI_Global.stage)(onKeyRelease)();
          return Effect_Ref.write(new Data_Maybe.Just({
              pressHandler: pressHandler,
              releaseHandler: releaseHandler
          }))(env.keyHandlers)();
      };
  };
  var disable = function (env) {
      return function __do() {
          log("disable called")();
          var keyHandler = Effect_Ref.read(env.keyHandlers)();
          if (keyHandler instanceof Data_Maybe.Just) {
              GObject.disconnect()(ShellUI_Global.stage)(keyHandler.value0.pressHandler)();
              return GObject.disconnect()(ShellUI_Global.stage)(keyHandler.value0.releaseHandler)();
          };
          if (keyHandler instanceof Data_Maybe.Nothing) {
              return log("Oops, no handler?!")();
          };
          throw new Error("Failed pattern match at GnomeMumblePushToTalk (line 72, column 3 - line 76, column 40): " + [ keyHandler.constructor.name ]);
      };
  };
  var create = function __do() {
      var keyHandlers = Effect_Ref["new"](Data_Maybe.Nothing.value)();
      return {
          keyHandlers: keyHandlers
      };
  };
  exports["log"] = log;
  exports["create"] = create;
  exports["init"] = init;
  exports["enable"] = enable;
  exports["disable"] = disable;
  exports["main"] = main;
})(PS);
PS["GnomeMumblePushToTalk"].main();// necessary footer to transform a spago build into a valid gnome extension
const env = PS["GnomeMumblePushToTalk"].create();
function init() { PS["GnomeMumblePushToTalk"].init(env)(); }
function enable() { PS["GnomeMumblePushToTalk"].enable(env)(); }
function disable() { PS["GnomeMumblePushToTalk"].disable(env)(); }
