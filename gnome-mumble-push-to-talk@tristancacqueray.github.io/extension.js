// Generated by purs bundle 0.14.0
var PS = {};
(function(exports) {
  "use strict";

  exports.unsafe_add_child = actor => child => () => actor.add_child(child)
  exports.unsafe_destroy = actor => () => actor.destroy()
  exports.unsafe_onButtonPressEvent = actor => cb => () =>
    actor.connect("button-press-event", (actor, event) => cb(actor)(event)())
  exports.unsafe_onButtonReleaseEvent = actor => cb => () =>
    actor.connect("button-release-event", (actor, event) => cb(actor)(event)())
})(PS["Clutter.Actor"] = PS["Clutter.Actor"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Clutter.Actor"] = $PS["Clutter.Actor"] || {};
  var exports = $PS["Clutter.Actor"];
  var $foreign = $PS["Clutter.Actor"];
  var onButtonReleaseEvent = function (dictActor) {
      return $foreign.unsafe_onButtonReleaseEvent;
  };
  var onButtonPressEvent = function (dictActor) {
      return $foreign.unsafe_onButtonPressEvent;
  };
  var destroy = function (dictActor) {
      return $foreign.unsafe_destroy;
  };
  var add_child = function (dictActor) {
      return function (dictActor1) {
          return $foreign.unsafe_add_child;
      };
  };
  exports["add_child"] = add_child;
  exports["destroy"] = destroy;
  exports["onButtonPressEvent"] = onButtonPressEvent;
  exports["onButtonReleaseEvent"] = onButtonReleaseEvent;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];          
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                  
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["Functor"] = Functor;
  exports["void"] = $$void;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";

  exports["null"] = null;

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  exports["toNullable"] = toNullable;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function(exports) {
  "use strict";      
  exports.log = msg => () => log(msg)
})(PS["GJS"] = PS["GJS"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["GJS"] = $PS["GJS"] || {};
  var exports = $PS["GJS"];
  var $foreign = $PS["GJS"];
  exports["log"] = $foreign.log;
})(PS);
(function(exports) {
  "use strict";

  const DBusCallFlags = imports.gi.Gio.DBusCallFlags;

  exports.none = DBusCallFlags.NONE
})(PS["Gio.DBusCallFlags"] = PS["Gio.DBusCallFlags"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Gio.DBusCallFlags"] = $PS["Gio.DBusCallFlags"] || {};
  var exports = $PS["Gio.DBusCallFlags"];
  var $foreign = $PS["Gio.DBusCallFlags"];
  exports["none"] = $foreign.none;
})(PS);
(function(exports) {
  "use strict";

  const DBus = imports.gi.Gio.DBus;
  const DBusConnection = imports.gi.Gio.DBusConnection;

  exports.session = DBus.session

  exports.call_impl = conn => bus_name => object_path => interface_name =>
    method_name => parameters => reply_type => flags => timeout_msec => cancellable => cbM => () => {
      const cb = cbM ? (_obj, res) => cbM(res)() : null;
      conn.call(bus_name, object_path, interface_name,
                method_name, parameters, reply_type, flags, timeout_msec, cancellable, cb);
    }
})(PS["Gio.DBusConnection"] = PS["Gio.DBusConnection"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Gio.DBusConnection"] = $PS["Gio.DBusConnection"] || {};
  var exports = $PS["Gio.DBusConnection"];
  var $foreign = $PS["Gio.DBusConnection"];
  var Data_Nullable = $PS["Data.Nullable"];
  var call = function (conn) {
      return function (bus_name) {
          return function (object_path) {
              return function (interface_name) {
                  return function (method_name) {
                      return function (parameters) {
                          return function (reply_type) {
                              return function (flags) {
                                  return function (timeout_msec) {
                                      return function (cancellable) {
                                          return function (cb) {
                                              return $foreign.call_impl(conn)(Data_Nullable.toNullable(bus_name))(object_path)(interface_name)(method_name)(Data_Nullable.toNullable(parameters))(Data_Nullable.toNullable(reply_type))(flags)(timeout_msec)(Data_Nullable.toNullable(cancellable))(Data_Nullable.toNullable(cb));
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["call"] = call;
  exports["session"] = $foreign.session;
})(PS);
(function(exports) {
  "use strict";

  const Gio = imports.gi.Gio;

  exports.new = name => () => Gio.ThemedIcon.new(name)
})(PS["Gio.ThemedIcon"] = PS["Gio.ThemedIcon"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["Gio.ThemedIcon"] = $PS["Gio.ThemedIcon"] || {};
  var exports = $PS["Gio.ThemedIcon"];
  var $foreign = $PS["Gio.ThemedIcon"];
  exports["new"] = $foreign["new"];
})(PS);
(function($PS) {
  "use strict";
  $PS["MumbleDBus"] = $PS["MumbleDBus"] || {};
  var exports = $PS["MumbleDBus"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Gio_DBusCallFlags = $PS["Gio.DBusCallFlags"];
  var Gio_DBusConnection = $PS["Gio.DBusConnection"];                
  var StartTalking = (function () {
      function StartTalking() {

      };
      StartTalking.value = new StartTalking();
      return StartTalking;
  })();
  var StopTalking = (function () {
      function StopTalking() {

      };
      StopTalking.value = new StopTalking();
      return StopTalking;
  })();
  var methodName = function (method) {
      if (method instanceof StartTalking) {
          return "startTalking";
      };
      if (method instanceof StopTalking) {
          return "stopTalking";
      };
      throw new Error("Failed pattern match at MumbleDBus (line 13, column 21 - line 15, column 31): " + [ method.constructor.name ]);
  };
  var call = function (method) {
      return Gio_DBusConnection.call(Gio_DBusConnection.session)(new Data_Maybe.Just("net.sourceforge.mumble.mumble"))("/")("net.sourceforge.mumble.Mumble")(methodName(method))(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(Gio_DBusCallFlags.none)(200)(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value);
  };
  exports["StartTalking"] = StartTalking;
  exports["StopTalking"] = StopTalking;
  exports["call"] = call;
})(PS);
(function(exports) {
  "use strict";

  let Main;
  try { Main = imports.ui.main; } catch (_) {}

  exports.addToStatusArea = role => indicator => () => Main.panel.addToStatusArea(role, indicator)
})(PS["ShellUI.Main.Panel"] = PS["ShellUI.Main.Panel"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["ShellUI.Main.Panel"] = $PS["ShellUI.Main.Panel"] || {};
  var exports = $PS["ShellUI.Main.Panel"];
  var $foreign = $PS["ShellUI.Main.Panel"];
  exports["addToStatusArea"] = $foreign.addToStatusArea;
})(PS);
(function(exports) {
  "use strict";

  let PanelMenu;
  try { PanelMenu = imports.ui.panelMenu; } catch (_) {}

  exports.newButton = (alignment) => (name) => (dontCreateMenu) => () =>
    new PanelMenu.Button(alignment, name, dontCreateMenu);
})(PS["ShellUI.PanelMenu"] = PS["ShellUI.PanelMenu"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["ShellUI.PanelMenu"] = $PS["ShellUI.PanelMenu"] || {};
  var exports = $PS["ShellUI.PanelMenu"];
  var $foreign = $PS["ShellUI.PanelMenu"];
  exports["newButton"] = $foreign.newButton;
})(PS);
(function(exports) {
  "use strict";

  let St;
  try { St = imports.gi.St; } catch(_) {}

  exports.unsafe_add_style_class_name = widget => name => () => widget.add_style_class_name(name)
})(PS["St"] = PS["St"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["St"] = $PS["St"] || {};
  var exports = $PS["St"];
  var $foreign = $PS["St"];
  var add_style_class_name = function (dictWidget) {
      return $foreign.unsafe_add_style_class_name;
  };
  exports["add_style_class_name"] = add_style_class_name;
})(PS);
(function(exports) {
  "use strict";

  let St;
  try { St = imports.gi.St; } catch(_) {}

  exports.new = () => St.Icon.new()
  exports.set_gicon = icon => gicon => () => icon.set_gicon(gicon)
})(PS["St.Icon"] = PS["St.Icon"] || {});
(function($PS) {
  // Generated by purs version 0.14.0
  "use strict";
  $PS["St.Icon"] = $PS["St.Icon"] || {};
  var exports = $PS["St.Icon"];
  var $foreign = $PS["St.Icon"];
  exports["new"] = $foreign["new"];
  exports["set_gicon"] = $foreign.set_gicon;
})(PS);
(function($PS) {
  "use strict";
  $PS["GnomeMumblePushToTalk"] = $PS["GnomeMumblePushToTalk"] || {};
  var exports = $PS["GnomeMumblePushToTalk"];
  var Clutter_Actor = $PS["Clutter.Actor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var GJS = $PS["GJS"];
  var Gio_ThemedIcon = $PS["Gio.ThemedIcon"];
  var MumbleDBus = $PS["MumbleDBus"];
  var ShellUI_Main_Panel = $PS["ShellUI.Main.Panel"];
  var ShellUI_PanelMenu = $PS["ShellUI.PanelMenu"];
  var St = $PS["St"];
  var St_Icon = $PS["St.Icon"];                
  var main = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  var log = function (msg) {
      return GJS.log("gnome-mumble-push-to-talk: " + msg);
  };
  var init = function (env) {
      return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  };

  // | Enable the extension
  var enable = function (envRef) {
      var onTalkStart = function (env) {
          return function (v) {
              return function (v1) {
                  return function __do() {
                      log("Start talking...")();
                      St_Icon.set_gicon(env.icon)(env.talkIcon)();
                      MumbleDBus.call(MumbleDBus.StartTalking.value)();
                      return true;
                  };
              };
          };
      };
      var onTalkEnd = function (env) {
          return function (v) {
              return function (v1) {
                  return function __do() {
                      log("Stop talking...")();
                      St_Icon.set_gicon(env.icon)(env.muteIcon)();
                      MumbleDBus.call(MumbleDBus.StopTalking.value)();
                      return true;
                  };
              };
          };
      };
      var createEnv = function __do() {
          var button = ShellUI_PanelMenu.newButton(0.0)("Mumble")(false)();
          var muteIcon = Gio_ThemedIcon["new"]("face-shutmouth-symbolic")();
          var talkIcon = Gio_ThemedIcon["new"]("face-smile-big-symbolic")();
          var icon = St_Icon["new"]();
          St.add_style_class_name()(icon)("system-status-icon")();
          St_Icon.set_gicon(icon)(muteIcon)();
          return {
              button: button,
              icon: icon,
              muteIcon: muteIcon,
              talkIcon: talkIcon
          };
      };
      return function __do() {
          log("enable called")();
          var env = createEnv();
          Effect_Ref.write(new Data_Maybe.Just(env))(envRef)();
          Clutter_Actor.add_child()()(env.button)(env.icon)();
          ShellUI_Main_Panel.addToStatusArea("mumble")(env.button)();
          Data_Functor["void"](Effect.functorEffect)(Clutter_Actor.onButtonPressEvent()(env.button)(onTalkStart(env)))();
          return Data_Functor["void"](Effect.functorEffect)(Clutter_Actor.onButtonReleaseEvent()(env.button)(onTalkEnd(env)))();
      };
  };

  // | Disable the extension
  var disable = function (envRef) {
      return function __do() {
          log("disable called")();
          var envM = Effect_Ref.read(envRef)();
          if (envM instanceof Data_Maybe.Just) {
              return Clutter_Actor.destroy()(envM.value0.button)();
          };
          if (envM instanceof Data_Maybe.Nothing) {
              return log("Oops, no env")();
          };
          throw new Error("Failed pattern match at GnomeMumblePushToTalk (line 75, column 3 - line 77, column 34): " + [ envM.constructor.name ]);
      };
  };
  var create = Effect_Ref["new"](Data_Maybe.Nothing.value);
  exports["log"] = log;
  exports["create"] = create;
  exports["init"] = init;
  exports["enable"] = enable;
  exports["disable"] = disable;
  exports["main"] = main;
})(PS);
PS["GnomeMumblePushToTalk"].main();// necessary footer to transform a spago build into a valid gnome extension
const env = PS["GnomeMumblePushToTalk"].create();
function init() { PS["GnomeMumblePushToTalk"].init(env)(); }
function enable() { PS["GnomeMumblePushToTalk"].enable(env)(); }
function disable() { PS["GnomeMumblePushToTalk"].disable(env)(); }
